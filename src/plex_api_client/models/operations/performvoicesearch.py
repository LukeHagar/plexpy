"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.types import BaseModel
from plex_api_client.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PerformVoiceSearchRequestTypedDict(TypedDict):
    query: str
    r"""The query term"""
    section_id: NotRequired[float]
    r"""This gives context to the search, and can result in re-ordering of search result hubs"""
    limit: NotRequired[float]
    r"""The number of items to return per hub"""


class PerformVoiceSearchRequest(BaseModel):
    query: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The query term"""

    section_id: Annotated[
        Optional[float],
        pydantic.Field(alias="sectionId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""This gives context to the search, and can result in re-ordering of search result hubs"""

    limit: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 3
    r"""The number of items to return per hub"""


class PerformVoiceSearchResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""


class PerformVoiceSearchResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
