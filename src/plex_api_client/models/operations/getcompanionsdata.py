"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict

GET_COMPANIONS_DATA_SERVERS = [
    "https://plex.tv/api/v2",
]


class ResponseBodyTypedDict(TypedDict):
    identifier: str
    base_url: str
    title: str
    link_url: str
    provides: str
    token: str
    r"""The plex authtoken used to identify with"""


class ResponseBody(BaseModel):
    identifier: str

    base_url: Annotated[str, pydantic.Field(alias="baseURL")]

    title: str

    link_url: Annotated[str, pydantic.Field(alias="linkURL")]

    provides: str

    token: str
    r"""The plex authtoken used to identify with"""


class GetCompanionsDataResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    response_bodies: NotRequired[List[ResponseBodyTypedDict]]
    r"""Companions Data"""


class GetCompanionsDataResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    response_bodies: Optional[List[ResponseBody]] = None
    r"""Companions Data"""
