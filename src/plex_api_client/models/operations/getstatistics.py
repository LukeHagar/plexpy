"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.types import BaseModel
from plex_api_client.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetStatisticsRequestTypedDict(TypedDict):
    timespan: NotRequired[int]
    r"""The timespan to retrieve statistics for
    the exact meaning of this parameter is not known

    """


class GetStatisticsRequest(BaseModel):
    timespan: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The timespan to retrieve statistics for
    the exact meaning of this parameter is not known

    """


class GetStatisticsDeviceTypedDict(TypedDict):
    id: NotRequired[int]
    name: NotRequired[str]
    platform: NotRequired[str]
    client_identifier: NotRequired[str]
    created_at: NotRequired[int]


class GetStatisticsDevice(BaseModel):
    id: Optional[int] = None

    name: Optional[str] = None

    platform: Optional[str] = None

    client_identifier: Annotated[
        Optional[str], pydantic.Field(alias="clientIdentifier")
    ] = None

    created_at: Annotated[Optional[int], pydantic.Field(alias="createdAt")] = None


class AccountTypedDict(TypedDict):
    id: NotRequired[int]
    key: NotRequired[str]
    name: NotRequired[str]
    default_audio_language: NotRequired[str]
    auto_select_audio: NotRequired[bool]
    default_subtitle_language: NotRequired[str]
    subtitle_mode: NotRequired[int]
    thumb: NotRequired[str]


class Account(BaseModel):
    id: Optional[int] = None

    key: Optional[str] = None

    name: Optional[str] = None

    default_audio_language: Annotated[
        Optional[str], pydantic.Field(alias="defaultAudioLanguage")
    ] = None

    auto_select_audio: Annotated[
        Optional[bool], pydantic.Field(alias="autoSelectAudio")
    ] = None

    default_subtitle_language: Annotated[
        Optional[str], pydantic.Field(alias="defaultSubtitleLanguage")
    ] = None

    subtitle_mode: Annotated[Optional[int], pydantic.Field(alias="subtitleMode")] = None

    thumb: Optional[str] = None


class StatisticsMediaTypedDict(TypedDict):
    account_id: NotRequired[int]
    device_id: NotRequired[int]
    timespan: NotRequired[int]
    at: NotRequired[int]
    metadata_type: NotRequired[int]
    count: NotRequired[int]
    duration: NotRequired[int]


class StatisticsMedia(BaseModel):
    account_id: Annotated[Optional[int], pydantic.Field(alias="accountID")] = None

    device_id: Annotated[Optional[int], pydantic.Field(alias="deviceID")] = None

    timespan: Optional[int] = None

    at: Optional[int] = None

    metadata_type: Annotated[Optional[int], pydantic.Field(alias="metadataType")] = None

    count: Optional[int] = None

    duration: Optional[int] = None


class GetStatisticsMediaContainerTypedDict(TypedDict):
    size: NotRequired[int]
    device: NotRequired[List[GetStatisticsDeviceTypedDict]]
    account: NotRequired[List[AccountTypedDict]]
    statistics_media: NotRequired[List[StatisticsMediaTypedDict]]


class GetStatisticsMediaContainer(BaseModel):
    size: Optional[int] = None

    device: Annotated[
        Optional[List[GetStatisticsDevice]], pydantic.Field(alias="Device")
    ] = None

    account: Annotated[Optional[List[Account]], pydantic.Field(alias="Account")] = None

    statistics_media: Annotated[
        Optional[List[StatisticsMedia]], pydantic.Field(alias="StatisticsMedia")
    ] = None


class GetStatisticsResponseBodyTypedDict(TypedDict):
    r"""Media Statistics"""

    media_container: NotRequired[GetStatisticsMediaContainerTypedDict]


class GetStatisticsResponseBody(BaseModel):
    r"""Media Statistics"""

    media_container: Annotated[
        Optional[GetStatisticsMediaContainer], pydantic.Field(alias="MediaContainer")
    ] = None


class GetStatisticsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[GetStatisticsResponseBodyTypedDict]
    r"""Media Statistics"""


class GetStatisticsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[GetStatisticsResponseBody] = None
    r"""Media Statistics"""
