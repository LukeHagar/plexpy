"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import httpx
from plex_api_client.types import BaseModel
from plex_api_client.utils import FieldMetadata, QueryParamMetadata
from typing_extensions import Annotated, TypedDict


class GetTransientTokenQueryParamType(str, Enum):
    r"""`delegation` - This is the only supported `type` parameter."""

    DELEGATION = "delegation"


class Scope(str, Enum):
    r"""`all` - This is the only supported `scope` parameter."""

    ALL = "all"


class GetTransientTokenRequestTypedDict(TypedDict):
    type: GetTransientTokenQueryParamType
    r"""`delegation` - This is the only supported `type` parameter."""
    scope: Scope
    r"""`all` - This is the only supported `scope` parameter."""


class GetTransientTokenRequest(BaseModel):
    type: Annotated[
        GetTransientTokenQueryParamType,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""`delegation` - This is the only supported `type` parameter."""

    scope: Annotated[
        Scope, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""`all` - This is the only supported `scope` parameter."""


class GetTransientTokenResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""


class GetTransientTokenResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
