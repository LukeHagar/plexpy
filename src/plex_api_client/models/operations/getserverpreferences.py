"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SettingTypedDict(TypedDict):
    id: NotRequired[str]
    label: NotRequired[str]
    summary: NotRequired[str]
    type: NotRequired[str]
    default: NotRequired[bool]
    value: NotRequired[bool]
    hidden: NotRequired[bool]
    advanced: NotRequired[bool]
    group: NotRequired[str]
    enum_values: NotRequired[str]


class Setting(BaseModel):
    id: Optional[str] = None

    label: Optional[str] = None

    summary: Optional[str] = None

    type: Optional[str] = None

    default: Optional[bool] = None

    value: Optional[bool] = None

    hidden: Optional[bool] = None

    advanced: Optional[bool] = None

    group: Optional[str] = None

    enum_values: Annotated[Optional[str], pydantic.Field(alias="enumValues")] = None


class GetServerPreferencesMediaContainerTypedDict(TypedDict):
    size: NotRequired[int]
    setting: NotRequired[List[SettingTypedDict]]


class GetServerPreferencesMediaContainer(BaseModel):
    size: Optional[int] = None

    setting: Annotated[Optional[List[Setting]], pydantic.Field(alias="Setting")] = None


class GetServerPreferencesResponseBodyTypedDict(TypedDict):
    r"""Server Preferences"""

    media_container: NotRequired[GetServerPreferencesMediaContainerTypedDict]


class GetServerPreferencesResponseBody(BaseModel):
    r"""Server Preferences"""

    media_container: Annotated[
        Optional[GetServerPreferencesMediaContainer],
        pydantic.Field(alias="MediaContainer"),
    ] = None


class GetServerPreferencesResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[GetServerPreferencesResponseBodyTypedDict]
    r"""Server Preferences"""


class GetServerPreferencesResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[GetServerPreferencesResponseBody] = None
    r"""Server Preferences"""
