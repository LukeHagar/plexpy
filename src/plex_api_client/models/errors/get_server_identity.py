"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.models.errors import PlexAPIError
from plex_api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated


class GetServerIdentityRequestTimeoutData(BaseModel):
    code: Optional[int] = None

    message: Optional[str] = None

    raw_response: Annotated[Optional[httpx.Response], pydantic.Field(exclude=True)] = (
        None
    )
    r"""Raw HTTP response; suitable for custom response parsing"""


class GetServerIdentityRequestTimeout(PlexAPIError):
    r"""Request Timeout"""

    data: GetServerIdentityRequestTimeoutData

    def __init__(
        self,
        data: GetServerIdentityRequestTimeoutData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data
